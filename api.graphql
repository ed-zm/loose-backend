### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Comment {
  createdAt: DateTime!
  id: String!
  task: Task!
  text: String!
  updatedAt: DateTime!
  user: User!
}

input CommentCreateInput {
  createdAt: DateTime
  id: String
  task: TaskCreateOneWithoutCommentsInput!
  text: String!
  updatedAt: DateTime
  user: UserCreateOneWithoutCommentInput!
}

input CommentCreateManyWithoutTaskInput {
  connect: [CommentWhereUniqueInput!]
  create: [CommentCreateWithoutTaskInput!]
}

input CommentCreateManyWithoutUserInput {
  connect: [CommentWhereUniqueInput!]
  create: [CommentCreateWithoutUserInput!]
}

input CommentCreateWithoutTaskInput {
  createdAt: DateTime
  id: String
  text: String!
  updatedAt: DateTime
  user: UserCreateOneWithoutCommentInput!
}

input CommentCreateWithoutUserInput {
  createdAt: DateTime
  id: String
  task: TaskCreateOneWithoutCommentsInput!
  text: String!
  updatedAt: DateTime
}

input CommentListRelationFilter {
  every: CommentWhereInput
  none: CommentWhereInput
  some: CommentWhereInput
}

input CommentOrderByInput {
  createdAt: SortOrder
  id: SortOrder
  taskId: SortOrder
  text: SortOrder
  updatedAt: SortOrder
  userId: SortOrder
}

input CommentScalarWhereInput {
  AND: [CommentScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [CommentScalarWhereInput!]
  OR: [CommentScalarWhereInput!]
  taskId: StringFilter
  text: StringFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input CommentUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  task: TaskUpdateOneRequiredWithoutCommentsInput
  text: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutCommentInput
}

input CommentUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentUpdateManyWithoutTaskInput {
  connect: [CommentWhereUniqueInput!]
  create: [CommentCreateWithoutTaskInput!]
  delete: [CommentWhereUniqueInput!]
  deleteMany: [CommentScalarWhereInput!]
  disconnect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutTaskInput!]
  updateMany: [CommentUpdateManyWithWhereNestedInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutTaskInput!]
}

input CommentUpdateManyWithoutUserInput {
  connect: [CommentWhereUniqueInput!]
  create: [CommentCreateWithoutUserInput!]
  delete: [CommentWhereUniqueInput!]
  deleteMany: [CommentScalarWhereInput!]
  disconnect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [CommentUpdateManyWithWhereNestedInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutUserInput!]
}

input CommentUpdateManyWithWhereNestedInput {
  data: CommentUpdateManyDataInput!
  where: CommentScalarWhereInput!
}

input CommentUpdateWithoutTaskDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutCommentInput
}

input CommentUpdateWithoutUserDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  task: TaskUpdateOneRequiredWithoutCommentsInput
  text: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentUpdateWithWhereUniqueWithoutTaskInput {
  data: CommentUpdateWithoutTaskDataInput!
  where: CommentWhereUniqueInput!
}

input CommentUpdateWithWhereUniqueWithoutUserInput {
  data: CommentUpdateWithoutUserDataInput!
  where: CommentWhereUniqueInput!
}

input CommentUpsertWithWhereUniqueWithoutTaskInput {
  create: CommentCreateWithoutTaskInput!
  update: CommentUpdateWithoutTaskDataInput!
  where: CommentWhereUniqueInput!
}

input CommentUpsertWithWhereUniqueWithoutUserInput {
  create: CommentCreateWithoutUserInput!
  update: CommentUpdateWithoutUserDataInput!
  where: CommentWhereUniqueInput!
}

input CommentWhereInput {
  AND: [CommentWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [CommentWhereInput!]
  OR: [CommentWhereInput!]
  task: TaskWhereInput
  taskId: StringFilter
  text: StringFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
  userId: StringFilter
}

input CommentWhereUniqueInput {
  id: String
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format
outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for
representation of dates and times using the Gregorian calendar.
"""
scalar Date

scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

type GithubCard {
  archived: Boolean!
  createdAt: Date!
  id: String!
  note: String!
  updatedAt: Date!
}

type GithubColumn {
  createdAt: Date!
  id: String!
  name: String!
  updatedAt: Date!
}

type GithubIssue {
  body: String!
  closedAt: Date!
  comments: Int!
  createdAt: Date!
  id: String!
  number: Int!
  state: String!
  title: String!
  updatedAt: Date!
  url: String!
}

type GithubOrganization {
  description: String!
  id: String!
  login: String!
}

type GithubProject {
  body: String!
  createdAt: Date!
  id: String!
  name: String!
  number: Int!
  updatedAt: Date!
  url: String!
}

type GithubRepository {
  description: String
  forksCount: Int!
  fullName: String!
  id: String!
  language: String
  name: String!
  openIssuesCount: Int!
  private: Boolean!
  stargazersCount: Int!
  updatedAt: Date!
}

input IntFieldUpdateOperationsInput {
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

type Invite {
  code: String!
  createdAt: DateTime!
  email: String
  expireAt: DateTime
  from: User!
  id: String!
  text: String
  title: String
  to: User
  type: InviteType!
  updatedAt: DateTime!
}

input InviteCreateManyWithoutFromInput {
  connect: [InviteWhereUniqueInput!]
  create: [InviteCreateWithoutFromInput!]
}

input InviteCreateManyWithoutToInput {
  connect: [InviteWhereUniqueInput!]
  create: [InviteCreateWithoutToInput!]
}

input InviteCreateWithoutFromInput {
  code: String!
  createdAt: DateTime
  email: String
  expireAt: DateTime
  id: String
  text: String
  title: String
  to: UserCreateOneWithoutReceivedInvitesInput
  type: InviteType!
  typeId: String!
  updatedAt: DateTime
}

input InviteCreateWithoutToInput {
  code: String!
  createdAt: DateTime
  email: String
  expireAt: DateTime
  from: UserCreateOneWithoutSentInvitesInput!
  id: String
  text: String
  title: String
  type: InviteType!
  typeId: String!
  updatedAt: DateTime
}

input InviteListRelationFilter {
  every: InviteWhereInput
  none: InviteWhereInput
  some: InviteWhereInput
}

input InviteScalarWhereInput {
  AND: [InviteScalarWhereInput!]
  code: StringFilter
  createdAt: DateTimeFilter
  email: StringNullableFilter
  expireAt: DateTimeNullableFilter
  fromId: StringFilter
  id: StringFilter
  NOT: [InviteScalarWhereInput!]
  OR: [InviteScalarWhereInput!]
  text: StringNullableFilter
  title: StringNullableFilter
  toId: StringNullableFilter
  type: InviteType
  typeId: StringFilter
  updatedAt: DateTimeFilter
}

enum InviteType {
  ORGANIZATION
}

input InviteUpdateManyDataInput {
  code: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  expireAt: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  type: InviteType
  typeId: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input InviteUpdateManyWithoutFromInput {
  connect: [InviteWhereUniqueInput!]
  create: [InviteCreateWithoutFromInput!]
  delete: [InviteWhereUniqueInput!]
  deleteMany: [InviteScalarWhereInput!]
  disconnect: [InviteWhereUniqueInput!]
  set: [InviteWhereUniqueInput!]
  update: [InviteUpdateWithWhereUniqueWithoutFromInput!]
  updateMany: [InviteUpdateManyWithWhereNestedInput!]
  upsert: [InviteUpsertWithWhereUniqueWithoutFromInput!]
}

input InviteUpdateManyWithoutToInput {
  connect: [InviteWhereUniqueInput!]
  create: [InviteCreateWithoutToInput!]
  delete: [InviteWhereUniqueInput!]
  deleteMany: [InviteScalarWhereInput!]
  disconnect: [InviteWhereUniqueInput!]
  set: [InviteWhereUniqueInput!]
  update: [InviteUpdateWithWhereUniqueWithoutToInput!]
  updateMany: [InviteUpdateManyWithWhereNestedInput!]
  upsert: [InviteUpsertWithWhereUniqueWithoutToInput!]
}

input InviteUpdateManyWithWhereNestedInput {
  data: InviteUpdateManyDataInput!
  where: InviteScalarWhereInput!
}

input InviteUpdateWithoutFromDataInput {
  code: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  expireAt: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  to: UserUpdateOneWithoutReceivedInvitesInput
  type: InviteType
  typeId: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input InviteUpdateWithoutToDataInput {
  code: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  expireAt: NullableDateTimeFieldUpdateOperationsInput
  from: UserUpdateOneRequiredWithoutSentInvitesInput
  id: StringFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  type: InviteType
  typeId: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input InviteUpdateWithWhereUniqueWithoutFromInput {
  data: InviteUpdateWithoutFromDataInput!
  where: InviteWhereUniqueInput!
}

input InviteUpdateWithWhereUniqueWithoutToInput {
  data: InviteUpdateWithoutToDataInput!
  where: InviteWhereUniqueInput!
}

input InviteUpsertWithWhereUniqueWithoutFromInput {
  create: InviteCreateWithoutFromInput!
  update: InviteUpdateWithoutFromDataInput!
  where: InviteWhereUniqueInput!
}

input InviteUpsertWithWhereUniqueWithoutToInput {
  create: InviteCreateWithoutToInput!
  update: InviteUpdateWithoutToDataInput!
  where: InviteWhereUniqueInput!
}

input InviteWhereInput {
  AND: [InviteWhereInput!]
  code: StringFilter
  createdAt: DateTimeFilter
  email: StringNullableFilter
  expireAt: DateTimeNullableFilter
  from: UserWhereInput
  fromId: StringFilter
  id: StringFilter
  NOT: [InviteWhereInput!]
  OR: [InviteWhereInput!]
  text: StringNullableFilter
  title: StringNullableFilter
  to: UserWhereInput
  toId: StringNullableFilter
  type: InviteType
  typeId: StringFilter
  updatedAt: DateTimeFilter
}

input InviteWhereUniqueInput {
  code: String
  id: String
}

type Label {
  color: String!
  createdAt: DateTime!
  id: String!
  organization: Organization!
  tasks(after: TaskWhereUniqueInput, before: TaskWhereUniqueInput, first: Int, last: Int): [Task!]!
  text: String!
  updatedAt: DateTime!
}

input LabelCreateInput {
  color: String!
  createdAt: DateTime
  id: String
  organization: OrganizationCreateOneWithoutLabelsInput!
  tasks: TaskCreateManyWithoutLabelsInput
  text: String!
  updatedAt: DateTime
}

input LabelCreateManyWithoutOrganizationInput {
  connect: [LabelWhereUniqueInput!]
  create: [LabelCreateWithoutOrganizationInput!]
}

input LabelCreateManyWithoutTasksInput {
  connect: [LabelWhereUniqueInput!]
  create: [LabelCreateWithoutTasksInput!]
}

input LabelCreateWithoutOrganizationInput {
  color: String!
  createdAt: DateTime
  id: String
  tasks: TaskCreateManyWithoutLabelsInput
  text: String!
  updatedAt: DateTime
}

input LabelCreateWithoutTasksInput {
  color: String!
  createdAt: DateTime
  id: String
  organization: OrganizationCreateOneWithoutLabelsInput!
  text: String!
  updatedAt: DateTime
}

input LabelListRelationFilter {
  every: LabelWhereInput
  none: LabelWhereInput
  some: LabelWhereInput
}

input LabelScalarWhereInput {
  AND: [LabelScalarWhereInput!]
  color: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [LabelScalarWhereInput!]
  OR: [LabelScalarWhereInput!]
  organizationId: StringFilter
  text: StringFilter
  updatedAt: DateTimeFilter
}

input LabelUpdateInput {
  color: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  organization: OrganizationUpdateOneRequiredWithoutLabelsInput
  tasks: TaskUpdateManyWithoutLabelsInput
  text: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LabelUpdateManyDataInput {
  color: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LabelUpdateManyWithoutOrganizationInput {
  connect: [LabelWhereUniqueInput!]
  create: [LabelCreateWithoutOrganizationInput!]
  delete: [LabelWhereUniqueInput!]
  deleteMany: [LabelScalarWhereInput!]
  disconnect: [LabelWhereUniqueInput!]
  set: [LabelWhereUniqueInput!]
  update: [LabelUpdateWithWhereUniqueWithoutOrganizationInput!]
  updateMany: [LabelUpdateManyWithWhereNestedInput!]
  upsert: [LabelUpsertWithWhereUniqueWithoutOrganizationInput!]
}

input LabelUpdateManyWithoutTasksInput {
  connect: [LabelWhereUniqueInput!]
  create: [LabelCreateWithoutTasksInput!]
  delete: [LabelWhereUniqueInput!]
  deleteMany: [LabelScalarWhereInput!]
  disconnect: [LabelWhereUniqueInput!]
  set: [LabelWhereUniqueInput!]
  update: [LabelUpdateWithWhereUniqueWithoutTasksInput!]
  updateMany: [LabelUpdateManyWithWhereNestedInput!]
  upsert: [LabelUpsertWithWhereUniqueWithoutTasksInput!]
}

input LabelUpdateManyWithWhereNestedInput {
  data: LabelUpdateManyDataInput!
  where: LabelScalarWhereInput!
}

input LabelUpdateWithoutOrganizationDataInput {
  color: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  tasks: TaskUpdateManyWithoutLabelsInput
  text: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LabelUpdateWithoutTasksDataInput {
  color: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  organization: OrganizationUpdateOneRequiredWithoutLabelsInput
  text: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LabelUpdateWithWhereUniqueWithoutOrganizationInput {
  data: LabelUpdateWithoutOrganizationDataInput!
  where: LabelWhereUniqueInput!
}

input LabelUpdateWithWhereUniqueWithoutTasksInput {
  data: LabelUpdateWithoutTasksDataInput!
  where: LabelWhereUniqueInput!
}

input LabelUpsertWithWhereUniqueWithoutOrganizationInput {
  create: LabelCreateWithoutOrganizationInput!
  update: LabelUpdateWithoutOrganizationDataInput!
  where: LabelWhereUniqueInput!
}

input LabelUpsertWithWhereUniqueWithoutTasksInput {
  create: LabelCreateWithoutTasksInput!
  update: LabelUpdateWithoutTasksDataInput!
  where: LabelWhereUniqueInput!
}

input LabelWhereInput {
  AND: [LabelWhereInput!]
  color: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [LabelWhereInput!]
  OR: [LabelWhereInput!]
  organization: OrganizationWhereInput
  organizationId: StringFilter
  tasks: TaskListRelationFilter
  text: StringFilter
  updatedAt: DateTimeFilter
}

input LabelWhereUniqueInput {
  id: String
  text: String
}

type Mutation {
  confirmEmail(emailVerificationCode: String!): Boolean!
  confirmResetPassword(password: String!, resetPasswordCode: String!): Boolean!
  createOneComment(data: CommentCreateInput!): Comment!
  createOneLabel(data: LabelCreateInput!): Label!
  createOneOrganization(data: OrganizationCreateInput!): Organization!
  createOneTask(data: TaskCreateInput!): Task!
  createOneTeam(data: TeamCreateInput!): Team!
  deleteOneComment(where: CommentWhereUniqueInput!): Comment
  deleteOneOrganization(where: OrganizationWhereUniqueInput!): Organization
  deleteOneTask(where: TaskWhereUniqueInput!): Task
  deleteOneTeam(where: TeamWhereUniqueInput!): Team
  deleteOneUser(where: UserWhereUniqueInput!): User
  githubLogin(code: String!, organizationId: ID!): String!
  importGithubCards(columnId: String!, organizationId: ID!, projectId: String!): [Task!]!
  importGithubIssues(open: Boolean, organizationId: ID!, repository: String!): [Task!]!
  inviteToOrganization: Invite!
  resendVerificationEmail(email: String!): Boolean!
  resetPassword(email: String!): Boolean!
  signIn(email: String!, password: String!, staySignedIn: Boolean): String!
  signUp(email: String!, firstName: String!, inviteCode: String, lastName: String, password: String!, username: String!): String!
  updateOneComment(data: CommentUpdateInput!, where: CommentWhereUniqueInput!): Comment
  updateOneLabel(data: LabelUpdateInput!, where: LabelWhereUniqueInput!): Label
  updateOneOrganization(data: OrganizationUpdateInput!, where: OrganizationWhereUniqueInput!): Organization
  updateOneResponseRequest(data: ResponseRequestUpdateInput!, where: ResponseRequestWhereUniqueInput!): ResponseRequest
  updateOneTask(data: TaskUpdateInput!, where: TaskWhereUniqueInput!): Task
  updateOneTeam(data: TeamUpdateInput!, where: TeamWhereUniqueInput!): Team
  updateOneUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableIntFieldUpdateOperationsInput {
  set: Int
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Organization {
  createdAt: DateTime!
  githubOrganization: String
  githubToken: String
  id: String!
  labels(after: LabelWhereUniqueInput, before: LabelWhereUniqueInput, first: Int, last: Int): [Label!]!
  name: String!
  owner: User!
  tasks(after: TaskWhereUniqueInput, before: TaskWhereUniqueInput, first: Int, last: Int): [Task!]!
  teams(after: TeamWhereUniqueInput, before: TeamWhereUniqueInput, first: Int, last: Int): [Team!]!
  updatedAt: DateTime!
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int, where: UserWhereInput): [User!]!
}

input OrganizationCreateInput {
  createdAt: DateTime
  githubOrganization: String
  githubToken: String
  id: String
  labels: LabelCreateManyWithoutOrganizationInput
  name: String!
  owner: UserCreateOneWithoutOwnOrganizationsInput!
  tasks: TaskCreateManyWithoutOrganizationInput
  teams: TeamCreateManyWithoutOrganizationInput
  updatedAt: DateTime
  users: UserCreateManyWithoutOrganizationsInput
}

input OrganizationCreateManyWithoutOwnerInput {
  connect: [OrganizationWhereUniqueInput!]
  create: [OrganizationCreateWithoutOwnerInput!]
}

input OrganizationCreateManyWithoutUsersInput {
  connect: [OrganizationWhereUniqueInput!]
  create: [OrganizationCreateWithoutUsersInput!]
}

input OrganizationCreateOneWithoutLabelsInput {
  connect: OrganizationWhereUniqueInput
  create: OrganizationCreateWithoutLabelsInput
}

input OrganizationCreateOneWithoutTasksInput {
  connect: OrganizationWhereUniqueInput
  create: OrganizationCreateWithoutTasksInput
}

input OrganizationCreateOneWithoutTeamsInput {
  connect: OrganizationWhereUniqueInput
  create: OrganizationCreateWithoutTeamsInput
}

input OrganizationCreateWithoutLabelsInput {
  createdAt: DateTime
  githubOrganization: String
  githubToken: String
  id: String
  name: String!
  owner: UserCreateOneWithoutOwnOrganizationsInput!
  tasks: TaskCreateManyWithoutOrganizationInput
  teams: TeamCreateManyWithoutOrganizationInput
  updatedAt: DateTime
  users: UserCreateManyWithoutOrganizationsInput
}

input OrganizationCreateWithoutOwnerInput {
  createdAt: DateTime
  githubOrganization: String
  githubToken: String
  id: String
  labels: LabelCreateManyWithoutOrganizationInput
  name: String!
  tasks: TaskCreateManyWithoutOrganizationInput
  teams: TeamCreateManyWithoutOrganizationInput
  updatedAt: DateTime
  users: UserCreateManyWithoutOrganizationsInput
}

input OrganizationCreateWithoutTasksInput {
  createdAt: DateTime
  githubOrganization: String
  githubToken: String
  id: String
  labels: LabelCreateManyWithoutOrganizationInput
  name: String!
  owner: UserCreateOneWithoutOwnOrganizationsInput!
  teams: TeamCreateManyWithoutOrganizationInput
  updatedAt: DateTime
  users: UserCreateManyWithoutOrganizationsInput
}

input OrganizationCreateWithoutTeamsInput {
  createdAt: DateTime
  githubOrganization: String
  githubToken: String
  id: String
  labels: LabelCreateManyWithoutOrganizationInput
  name: String!
  owner: UserCreateOneWithoutOwnOrganizationsInput!
  tasks: TaskCreateManyWithoutOrganizationInput
  updatedAt: DateTime
  users: UserCreateManyWithoutOrganizationsInput
}

input OrganizationCreateWithoutUsersInput {
  createdAt: DateTime
  githubOrganization: String
  githubToken: String
  id: String
  labels: LabelCreateManyWithoutOrganizationInput
  name: String!
  owner: UserCreateOneWithoutOwnOrganizationsInput!
  tasks: TaskCreateManyWithoutOrganizationInput
  teams: TeamCreateManyWithoutOrganizationInput
  updatedAt: DateTime
}

input OrganizationListRelationFilter {
  every: OrganizationWhereInput
  none: OrganizationWhereInput
  some: OrganizationWhereInput
}

input OrganizationOrderByInput {
  createdAt: SortOrder
  githubOrganization: SortOrder
  githubToken: SortOrder
  id: SortOrder
  name: SortOrder
  ownerId: SortOrder
  updatedAt: SortOrder
}

input OrganizationScalarWhereInput {
  AND: [OrganizationScalarWhereInput!]
  createdAt: DateTimeFilter
  githubOrganization: StringNullableFilter
  githubToken: StringNullableFilter
  id: StringFilter
  name: StringFilter
  NOT: [OrganizationScalarWhereInput!]
  OR: [OrganizationScalarWhereInput!]
  ownerId: StringFilter
  updatedAt: DateTimeFilter
}

input OrganizationUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  githubOrganization: NullableStringFieldUpdateOperationsInput
  githubToken: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  labels: LabelUpdateManyWithoutOrganizationInput
  name: StringFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutOwnOrganizationsInput
  tasks: TaskUpdateManyWithoutOrganizationInput
  teams: TeamUpdateManyWithoutOrganizationInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  users: UserUpdateManyWithoutOrganizationsInput
}

input OrganizationUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  githubOrganization: NullableStringFieldUpdateOperationsInput
  githubToken: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input OrganizationUpdateManyWithoutOwnerInput {
  connect: [OrganizationWhereUniqueInput!]
  create: [OrganizationCreateWithoutOwnerInput!]
  delete: [OrganizationWhereUniqueInput!]
  deleteMany: [OrganizationScalarWhereInput!]
  disconnect: [OrganizationWhereUniqueInput!]
  set: [OrganizationWhereUniqueInput!]
  update: [OrganizationUpdateWithWhereUniqueWithoutOwnerInput!]
  updateMany: [OrganizationUpdateManyWithWhereNestedInput!]
  upsert: [OrganizationUpsertWithWhereUniqueWithoutOwnerInput!]
}

input OrganizationUpdateManyWithoutUsersInput {
  connect: [OrganizationWhereUniqueInput!]
  create: [OrganizationCreateWithoutUsersInput!]
  delete: [OrganizationWhereUniqueInput!]
  deleteMany: [OrganizationScalarWhereInput!]
  disconnect: [OrganizationWhereUniqueInput!]
  set: [OrganizationWhereUniqueInput!]
  update: [OrganizationUpdateWithWhereUniqueWithoutUsersInput!]
  updateMany: [OrganizationUpdateManyWithWhereNestedInput!]
  upsert: [OrganizationUpsertWithWhereUniqueWithoutUsersInput!]
}

input OrganizationUpdateManyWithWhereNestedInput {
  data: OrganizationUpdateManyDataInput!
  where: OrganizationScalarWhereInput!
}

input OrganizationUpdateOneRequiredWithoutLabelsInput {
  connect: OrganizationWhereUniqueInput
  create: OrganizationCreateWithoutLabelsInput
  update: OrganizationUpdateWithoutLabelsDataInput
  upsert: OrganizationUpsertWithoutLabelsInput
}

input OrganizationUpdateOneRequiredWithoutTeamsInput {
  connect: OrganizationWhereUniqueInput
  create: OrganizationCreateWithoutTeamsInput
  update: OrganizationUpdateWithoutTeamsDataInput
  upsert: OrganizationUpsertWithoutTeamsInput
}

input OrganizationUpdateOneWithoutTasksInput {
  connect: OrganizationWhereUniqueInput
  create: OrganizationCreateWithoutTasksInput
  delete: Boolean
  disconnect: Boolean
  update: OrganizationUpdateWithoutTasksDataInput
  upsert: OrganizationUpsertWithoutTasksInput
}

input OrganizationUpdateWithoutLabelsDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  githubOrganization: NullableStringFieldUpdateOperationsInput
  githubToken: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutOwnOrganizationsInput
  tasks: TaskUpdateManyWithoutOrganizationInput
  teams: TeamUpdateManyWithoutOrganizationInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  users: UserUpdateManyWithoutOrganizationsInput
}

input OrganizationUpdateWithoutOwnerDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  githubOrganization: NullableStringFieldUpdateOperationsInput
  githubToken: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  labels: LabelUpdateManyWithoutOrganizationInput
  name: StringFieldUpdateOperationsInput
  tasks: TaskUpdateManyWithoutOrganizationInput
  teams: TeamUpdateManyWithoutOrganizationInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  users: UserUpdateManyWithoutOrganizationsInput
}

input OrganizationUpdateWithoutTasksDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  githubOrganization: NullableStringFieldUpdateOperationsInput
  githubToken: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  labels: LabelUpdateManyWithoutOrganizationInput
  name: StringFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutOwnOrganizationsInput
  teams: TeamUpdateManyWithoutOrganizationInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  users: UserUpdateManyWithoutOrganizationsInput
}

input OrganizationUpdateWithoutTeamsDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  githubOrganization: NullableStringFieldUpdateOperationsInput
  githubToken: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  labels: LabelUpdateManyWithoutOrganizationInput
  name: StringFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutOwnOrganizationsInput
  tasks: TaskUpdateManyWithoutOrganizationInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  users: UserUpdateManyWithoutOrganizationsInput
}

input OrganizationUpdateWithoutUsersDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  githubOrganization: NullableStringFieldUpdateOperationsInput
  githubToken: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  labels: LabelUpdateManyWithoutOrganizationInput
  name: StringFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutOwnOrganizationsInput
  tasks: TaskUpdateManyWithoutOrganizationInput
  teams: TeamUpdateManyWithoutOrganizationInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input OrganizationUpdateWithWhereUniqueWithoutOwnerInput {
  data: OrganizationUpdateWithoutOwnerDataInput!
  where: OrganizationWhereUniqueInput!
}

input OrganizationUpdateWithWhereUniqueWithoutUsersInput {
  data: OrganizationUpdateWithoutUsersDataInput!
  where: OrganizationWhereUniqueInput!
}

input OrganizationUpsertWithoutLabelsInput {
  create: OrganizationCreateWithoutLabelsInput!
  update: OrganizationUpdateWithoutLabelsDataInput!
}

input OrganizationUpsertWithoutTasksInput {
  create: OrganizationCreateWithoutTasksInput!
  update: OrganizationUpdateWithoutTasksDataInput!
}

input OrganizationUpsertWithoutTeamsInput {
  create: OrganizationCreateWithoutTeamsInput!
  update: OrganizationUpdateWithoutTeamsDataInput!
}

input OrganizationUpsertWithWhereUniqueWithoutOwnerInput {
  create: OrganizationCreateWithoutOwnerInput!
  update: OrganizationUpdateWithoutOwnerDataInput!
  where: OrganizationWhereUniqueInput!
}

input OrganizationUpsertWithWhereUniqueWithoutUsersInput {
  create: OrganizationCreateWithoutUsersInput!
  update: OrganizationUpdateWithoutUsersDataInput!
  where: OrganizationWhereUniqueInput!
}

input OrganizationWhereInput {
  AND: [OrganizationWhereInput!]
  createdAt: DateTimeFilter
  githubOrganization: StringNullableFilter
  githubToken: StringNullableFilter
  id: StringFilter
  labels: LabelListRelationFilter
  name: StringFilter
  NOT: [OrganizationWhereInput!]
  OR: [OrganizationWhereInput!]
  owner: UserWhereInput
  ownerId: StringFilter
  tasks: TaskListRelationFilter
  teams: TeamListRelationFilter
  updatedAt: DateTimeFilter
  users: UserListRelationFilter
}

input OrganizationWhereUniqueInput {
  id: String
}

type Query {
  comments(after: CommentWhereUniqueInput, before: CommentWhereUniqueInput, first: Int, last: Int, orderBy: [CommentOrderByInput!], where: CommentWhereInput): [Comment!]!
  getS3SignedUrl(fileType: String!, folder: String, id: ID!, operation: String!, random: Boolean): String!
  githubCards(columnId: ID!, organizationId: ID!): [GithubCard!]!
  githubColumns(organizationId: ID!, projectId: ID!): [GithubColumn!]!
  githubIssues(organizationId: ID!, repository: String!): [GithubIssue!]!
  githubOrganizations(organizationId: ID!): [GithubOrganization!]!
  githubProjects(organizationId: ID!): [GithubProject!]!
  githubRepositories(organizationId: ID!): [GithubRepository!]!
  invite(where: InviteWhereUniqueInput!): Invite
  label(where: LabelWhereUniqueInput!): Label
  labels(after: LabelWhereUniqueInput, before: LabelWhereUniqueInput, first: Int, last: Int, where: LabelWhereInput): [Label!]!
  loggedIn: User
  organization(where: OrganizationWhereUniqueInput!): Organization
  organizations(after: OrganizationWhereUniqueInput, before: OrganizationWhereUniqueInput, first: Int, last: Int, orderBy: [OrganizationOrderByInput!], where: OrganizationWhereInput): [Organization!]!
  responseRequests(after: ResponseRequestWhereUniqueInput, before: ResponseRequestWhereUniqueInput, first: Int, last: Int, orderBy: [ResponseRequestOrderByInput!], where: ResponseRequestWhereInput): [ResponseRequest!]!
  task(where: TaskWhereUniqueInput!): Task
  tasks(after: TaskWhereUniqueInput, before: TaskWhereUniqueInput, first: Int, last: Int, orderBy: [TaskOrderByInput!], where: TaskWhereInput): [Task!]!
  team(where: TeamWhereUniqueInput!): Team
  teams(after: TeamWhereUniqueInput, before: TeamWhereUniqueInput, first: Int, last: Int, orderBy: [TeamOrderByInput!], where: TeamWhereInput): [Team!]!
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int, orderBy: [UserOrderByInput!], where: UserWhereInput): [User!]!
}

type ResponseRequest {
  assignedTo: User!
  createdAt: DateTime!
  createdBy: User!
  description: String!
  id: String!
  state: Int
  task: Task!
  title: String!
  updatedAt: DateTime!
}

input ResponseRequestCreateManyWithoutAssignedToInput {
  connect: [ResponseRequestWhereUniqueInput!]
  create: [ResponseRequestCreateWithoutAssignedToInput!]
}

input ResponseRequestCreateManyWithoutCreatedByInput {
  connect: [ResponseRequestWhereUniqueInput!]
  create: [ResponseRequestCreateWithoutCreatedByInput!]
}

input ResponseRequestCreateManyWithoutTaskInput {
  connect: [ResponseRequestWhereUniqueInput!]
  create: [ResponseRequestCreateWithoutTaskInput!]
}

input ResponseRequestCreateWithoutAssignedToInput {
  createdAt: DateTime
  createdBy: UserCreateOneWithoutCreatedResponseRequestInput!
  description: String!
  id: String
  state: Int
  task: TaskCreateOneWithoutResponseRequestsInput!
  title: String!
  updatedAt: DateTime
}

input ResponseRequestCreateWithoutCreatedByInput {
  assignedTo: UserCreateOneWithoutAssignedResponseRequestInput!
  createdAt: DateTime
  description: String!
  id: String
  state: Int
  task: TaskCreateOneWithoutResponseRequestsInput!
  title: String!
  updatedAt: DateTime
}

input ResponseRequestCreateWithoutTaskInput {
  assignedTo: UserCreateOneWithoutAssignedResponseRequestInput!
  createdAt: DateTime
  createdBy: UserCreateOneWithoutCreatedResponseRequestInput!
  description: String!
  id: String
  state: Int
  title: String!
  updatedAt: DateTime
}

input ResponseRequestListRelationFilter {
  every: ResponseRequestWhereInput
  none: ResponseRequestWhereInput
  some: ResponseRequestWhereInput
}

input ResponseRequestOrderByInput {
  assignedToId: SortOrder
  createdAt: SortOrder
  createdById: SortOrder
  description: SortOrder
  id: SortOrder
  state: SortOrder
  taskId: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

input ResponseRequestScalarWhereInput {
  AND: [ResponseRequestScalarWhereInput!]
  assignedToId: StringFilter
  createdAt: DateTimeFilter
  createdById: StringFilter
  description: StringFilter
  id: StringFilter
  NOT: [ResponseRequestScalarWhereInput!]
  OR: [ResponseRequestScalarWhereInput!]
  state: IntNullableFilter
  taskId: StringFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

input ResponseRequestUpdateInput {
  assignedTo: UserUpdateOneRequiredWithoutAssignedResponseRequestInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: UserUpdateOneRequiredWithoutCreatedResponseRequestInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  state: NullableIntFieldUpdateOperationsInput
  task: TaskUpdateOneRequiredWithoutResponseRequestsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ResponseRequestUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  state: NullableIntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ResponseRequestUpdateManyWithoutAssignedToInput {
  connect: [ResponseRequestWhereUniqueInput!]
  create: [ResponseRequestCreateWithoutAssignedToInput!]
  delete: [ResponseRequestWhereUniqueInput!]
  deleteMany: [ResponseRequestScalarWhereInput!]
  disconnect: [ResponseRequestWhereUniqueInput!]
  set: [ResponseRequestWhereUniqueInput!]
  update: [ResponseRequestUpdateWithWhereUniqueWithoutAssignedToInput!]
  updateMany: [ResponseRequestUpdateManyWithWhereNestedInput!]
  upsert: [ResponseRequestUpsertWithWhereUniqueWithoutAssignedToInput!]
}

input ResponseRequestUpdateManyWithoutCreatedByInput {
  connect: [ResponseRequestWhereUniqueInput!]
  create: [ResponseRequestCreateWithoutCreatedByInput!]
  delete: [ResponseRequestWhereUniqueInput!]
  deleteMany: [ResponseRequestScalarWhereInput!]
  disconnect: [ResponseRequestWhereUniqueInput!]
  set: [ResponseRequestWhereUniqueInput!]
  update: [ResponseRequestUpdateWithWhereUniqueWithoutCreatedByInput!]
  updateMany: [ResponseRequestUpdateManyWithWhereNestedInput!]
  upsert: [ResponseRequestUpsertWithWhereUniqueWithoutCreatedByInput!]
}

input ResponseRequestUpdateManyWithoutTaskInput {
  connect: [ResponseRequestWhereUniqueInput!]
  create: [ResponseRequestCreateWithoutTaskInput!]
  delete: [ResponseRequestWhereUniqueInput!]
  deleteMany: [ResponseRequestScalarWhereInput!]
  disconnect: [ResponseRequestWhereUniqueInput!]
  set: [ResponseRequestWhereUniqueInput!]
  update: [ResponseRequestUpdateWithWhereUniqueWithoutTaskInput!]
  updateMany: [ResponseRequestUpdateManyWithWhereNestedInput!]
  upsert: [ResponseRequestUpsertWithWhereUniqueWithoutTaskInput!]
}

input ResponseRequestUpdateManyWithWhereNestedInput {
  data: ResponseRequestUpdateManyDataInput!
  where: ResponseRequestScalarWhereInput!
}

input ResponseRequestUpdateWithoutAssignedToDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: UserUpdateOneRequiredWithoutCreatedResponseRequestInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  state: NullableIntFieldUpdateOperationsInput
  task: TaskUpdateOneRequiredWithoutResponseRequestsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ResponseRequestUpdateWithoutCreatedByDataInput {
  assignedTo: UserUpdateOneRequiredWithoutAssignedResponseRequestInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  state: NullableIntFieldUpdateOperationsInput
  task: TaskUpdateOneRequiredWithoutResponseRequestsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ResponseRequestUpdateWithoutTaskDataInput {
  assignedTo: UserUpdateOneRequiredWithoutAssignedResponseRequestInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: UserUpdateOneRequiredWithoutCreatedResponseRequestInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  state: NullableIntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ResponseRequestUpdateWithWhereUniqueWithoutAssignedToInput {
  data: ResponseRequestUpdateWithoutAssignedToDataInput!
  where: ResponseRequestWhereUniqueInput!
}

input ResponseRequestUpdateWithWhereUniqueWithoutCreatedByInput {
  data: ResponseRequestUpdateWithoutCreatedByDataInput!
  where: ResponseRequestWhereUniqueInput!
}

input ResponseRequestUpdateWithWhereUniqueWithoutTaskInput {
  data: ResponseRequestUpdateWithoutTaskDataInput!
  where: ResponseRequestWhereUniqueInput!
}

input ResponseRequestUpsertWithWhereUniqueWithoutAssignedToInput {
  create: ResponseRequestCreateWithoutAssignedToInput!
  update: ResponseRequestUpdateWithoutAssignedToDataInput!
  where: ResponseRequestWhereUniqueInput!
}

input ResponseRequestUpsertWithWhereUniqueWithoutCreatedByInput {
  create: ResponseRequestCreateWithoutCreatedByInput!
  update: ResponseRequestUpdateWithoutCreatedByDataInput!
  where: ResponseRequestWhereUniqueInput!
}

input ResponseRequestUpsertWithWhereUniqueWithoutTaskInput {
  create: ResponseRequestCreateWithoutTaskInput!
  update: ResponseRequestUpdateWithoutTaskDataInput!
  where: ResponseRequestWhereUniqueInput!
}

input ResponseRequestWhereInput {
  AND: [ResponseRequestWhereInput!]
  assignedTo: UserWhereInput
  assignedToId: StringFilter
  createdAt: DateTimeFilter
  createdBy: UserWhereInput
  createdById: StringFilter
  description: StringFilter
  id: StringFilter
  NOT: [ResponseRequestWhereInput!]
  OR: [ResponseRequestWhereInput!]
  state: IntNullableFilter
  task: TaskWhereInput
  taskId: StringFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

input ResponseRequestWhereUniqueInput {
  id: String
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Task {
  assignedTo: User
  code: String
  comments(after: CommentWhereUniqueInput, before: CommentWhereUniqueInput, first: Int, last: Int): [Comment!]!
  createdAt: DateTime!
  createdBy: User!
  description: String
  estimated: Int!
  id: String!
  labels(after: LabelWhereUniqueInput, before: LabelWhereUniqueInput, first: Int, last: Int): [Label!]!
  organization: Organization
  responseRequests(after: ResponseRequestWhereUniqueInput, before: ResponseRequestWhereUniqueInput, first: Int, last: Int): [ResponseRequest!]!
  state: Int
  team: Team
  title: String!
  updatedAt: DateTime!
}

input TaskCreateInput {
  assignedTo: UserCreateOneWithoutTasksAssignedInput
  code: String
  comments: CommentCreateManyWithoutTaskInput
  createdAt: DateTime
  createdBy: UserCreateOneWithoutTasksCreatedInput!
  description: String
  estimated: Int
  id: String
  labels: LabelCreateManyWithoutTasksInput
  organization: OrganizationCreateOneWithoutTasksInput
  responseRequests: ResponseRequestCreateManyWithoutTaskInput
  state: Int
  team: TeamCreateOneWithoutTasksInput
  title: String!
  updatedAt: DateTime
}

input TaskCreateManyWithoutAssignedToInput {
  connect: [TaskWhereUniqueInput!]
  create: [TaskCreateWithoutAssignedToInput!]
}

input TaskCreateManyWithoutCreatedByInput {
  connect: [TaskWhereUniqueInput!]
  create: [TaskCreateWithoutCreatedByInput!]
}

input TaskCreateManyWithoutLabelsInput {
  connect: [TaskWhereUniqueInput!]
  create: [TaskCreateWithoutLabelsInput!]
}

input TaskCreateManyWithoutOrganizationInput {
  connect: [TaskWhereUniqueInput!]
  create: [TaskCreateWithoutOrganizationInput!]
}

input TaskCreateManyWithoutTeamInput {
  connect: [TaskWhereUniqueInput!]
  create: [TaskCreateWithoutTeamInput!]
}

input TaskCreateOneWithoutCommentsInput {
  connect: TaskWhereUniqueInput
  create: TaskCreateWithoutCommentsInput
}

input TaskCreateOneWithoutResponseRequestsInput {
  connect: TaskWhereUniqueInput
  create: TaskCreateWithoutResponseRequestsInput
}

input TaskCreateWithoutAssignedToInput {
  code: String
  comments: CommentCreateManyWithoutTaskInput
  createdAt: DateTime
  createdBy: UserCreateOneWithoutTasksCreatedInput!
  description: String
  estimated: Int
  id: String
  labels: LabelCreateManyWithoutTasksInput
  organization: OrganizationCreateOneWithoutTasksInput
  responseRequests: ResponseRequestCreateManyWithoutTaskInput
  state: Int
  team: TeamCreateOneWithoutTasksInput
  title: String!
  updatedAt: DateTime
}

input TaskCreateWithoutCommentsInput {
  assignedTo: UserCreateOneWithoutTasksAssignedInput
  code: String
  createdAt: DateTime
  createdBy: UserCreateOneWithoutTasksCreatedInput!
  description: String
  estimated: Int
  id: String
  labels: LabelCreateManyWithoutTasksInput
  organization: OrganizationCreateOneWithoutTasksInput
  responseRequests: ResponseRequestCreateManyWithoutTaskInput
  state: Int
  team: TeamCreateOneWithoutTasksInput
  title: String!
  updatedAt: DateTime
}

input TaskCreateWithoutCreatedByInput {
  assignedTo: UserCreateOneWithoutTasksAssignedInput
  code: String
  comments: CommentCreateManyWithoutTaskInput
  createdAt: DateTime
  description: String
  estimated: Int
  id: String
  labels: LabelCreateManyWithoutTasksInput
  organization: OrganizationCreateOneWithoutTasksInput
  responseRequests: ResponseRequestCreateManyWithoutTaskInput
  state: Int
  team: TeamCreateOneWithoutTasksInput
  title: String!
  updatedAt: DateTime
}

input TaskCreateWithoutLabelsInput {
  assignedTo: UserCreateOneWithoutTasksAssignedInput
  code: String
  comments: CommentCreateManyWithoutTaskInput
  createdAt: DateTime
  createdBy: UserCreateOneWithoutTasksCreatedInput!
  description: String
  estimated: Int
  id: String
  organization: OrganizationCreateOneWithoutTasksInput
  responseRequests: ResponseRequestCreateManyWithoutTaskInput
  state: Int
  team: TeamCreateOneWithoutTasksInput
  title: String!
  updatedAt: DateTime
}

input TaskCreateWithoutOrganizationInput {
  assignedTo: UserCreateOneWithoutTasksAssignedInput
  code: String
  comments: CommentCreateManyWithoutTaskInput
  createdAt: DateTime
  createdBy: UserCreateOneWithoutTasksCreatedInput!
  description: String
  estimated: Int
  id: String
  labels: LabelCreateManyWithoutTasksInput
  responseRequests: ResponseRequestCreateManyWithoutTaskInput
  state: Int
  team: TeamCreateOneWithoutTasksInput
  title: String!
  updatedAt: DateTime
}

input TaskCreateWithoutResponseRequestsInput {
  assignedTo: UserCreateOneWithoutTasksAssignedInput
  code: String
  comments: CommentCreateManyWithoutTaskInput
  createdAt: DateTime
  createdBy: UserCreateOneWithoutTasksCreatedInput!
  description: String
  estimated: Int
  id: String
  labels: LabelCreateManyWithoutTasksInput
  organization: OrganizationCreateOneWithoutTasksInput
  state: Int
  team: TeamCreateOneWithoutTasksInput
  title: String!
  updatedAt: DateTime
}

input TaskCreateWithoutTeamInput {
  assignedTo: UserCreateOneWithoutTasksAssignedInput
  code: String
  comments: CommentCreateManyWithoutTaskInput
  createdAt: DateTime
  createdBy: UserCreateOneWithoutTasksCreatedInput!
  description: String
  estimated: Int
  id: String
  labels: LabelCreateManyWithoutTasksInput
  organization: OrganizationCreateOneWithoutTasksInput
  responseRequests: ResponseRequestCreateManyWithoutTaskInput
  state: Int
  title: String!
  updatedAt: DateTime
}

input TaskListRelationFilter {
  every: TaskWhereInput
  none: TaskWhereInput
  some: TaskWhereInput
}

input TaskOrderByInput {
  assignedToId: SortOrder
  code: SortOrder
  createdAt: SortOrder
  createdById: SortOrder
  description: SortOrder
  estimated: SortOrder
  id: SortOrder
  organizationId: SortOrder
  state: SortOrder
  teamId: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

input TaskScalarWhereInput {
  AND: [TaskScalarWhereInput!]
  assignedToId: StringNullableFilter
  code: StringNullableFilter
  createdAt: DateTimeFilter
  createdById: StringFilter
  description: StringNullableFilter
  estimated: IntFilter
  id: StringFilter
  NOT: [TaskScalarWhereInput!]
  OR: [TaskScalarWhereInput!]
  organizationId: StringNullableFilter
  state: IntNullableFilter
  teamId: StringNullableFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

input TaskUpdateInput {
  assignedTo: UserUpdateOneWithoutTasksAssignedInput
  code: NullableStringFieldUpdateOperationsInput
  comments: CommentUpdateManyWithoutTaskInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: UserUpdateOneRequiredWithoutTasksCreatedInput
  description: NullableStringFieldUpdateOperationsInput
  estimated: IntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  labels: LabelUpdateManyWithoutTasksInput
  organization: OrganizationUpdateOneWithoutTasksInput
  responseRequests: ResponseRequestUpdateManyWithoutTaskInput
  state: NullableIntFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutTasksInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TaskUpdateManyDataInput {
  code: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  estimated: IntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  state: NullableIntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TaskUpdateManyWithoutAssignedToInput {
  connect: [TaskWhereUniqueInput!]
  create: [TaskCreateWithoutAssignedToInput!]
  delete: [TaskWhereUniqueInput!]
  deleteMany: [TaskScalarWhereInput!]
  disconnect: [TaskWhereUniqueInput!]
  set: [TaskWhereUniqueInput!]
  update: [TaskUpdateWithWhereUniqueWithoutAssignedToInput!]
  updateMany: [TaskUpdateManyWithWhereNestedInput!]
  upsert: [TaskUpsertWithWhereUniqueWithoutAssignedToInput!]
}

input TaskUpdateManyWithoutCreatedByInput {
  connect: [TaskWhereUniqueInput!]
  create: [TaskCreateWithoutCreatedByInput!]
  delete: [TaskWhereUniqueInput!]
  deleteMany: [TaskScalarWhereInput!]
  disconnect: [TaskWhereUniqueInput!]
  set: [TaskWhereUniqueInput!]
  update: [TaskUpdateWithWhereUniqueWithoutCreatedByInput!]
  updateMany: [TaskUpdateManyWithWhereNestedInput!]
  upsert: [TaskUpsertWithWhereUniqueWithoutCreatedByInput!]
}

input TaskUpdateManyWithoutLabelsInput {
  connect: [TaskWhereUniqueInput!]
  create: [TaskCreateWithoutLabelsInput!]
  delete: [TaskWhereUniqueInput!]
  deleteMany: [TaskScalarWhereInput!]
  disconnect: [TaskWhereUniqueInput!]
  set: [TaskWhereUniqueInput!]
  update: [TaskUpdateWithWhereUniqueWithoutLabelsInput!]
  updateMany: [TaskUpdateManyWithWhereNestedInput!]
  upsert: [TaskUpsertWithWhereUniqueWithoutLabelsInput!]
}

input TaskUpdateManyWithoutOrganizationInput {
  connect: [TaskWhereUniqueInput!]
  create: [TaskCreateWithoutOrganizationInput!]
  delete: [TaskWhereUniqueInput!]
  deleteMany: [TaskScalarWhereInput!]
  disconnect: [TaskWhereUniqueInput!]
  set: [TaskWhereUniqueInput!]
  update: [TaskUpdateWithWhereUniqueWithoutOrganizationInput!]
  updateMany: [TaskUpdateManyWithWhereNestedInput!]
  upsert: [TaskUpsertWithWhereUniqueWithoutOrganizationInput!]
}

input TaskUpdateManyWithoutTeamInput {
  connect: [TaskWhereUniqueInput!]
  create: [TaskCreateWithoutTeamInput!]
  delete: [TaskWhereUniqueInput!]
  deleteMany: [TaskScalarWhereInput!]
  disconnect: [TaskWhereUniqueInput!]
  set: [TaskWhereUniqueInput!]
  update: [TaskUpdateWithWhereUniqueWithoutTeamInput!]
  updateMany: [TaskUpdateManyWithWhereNestedInput!]
  upsert: [TaskUpsertWithWhereUniqueWithoutTeamInput!]
}

input TaskUpdateManyWithWhereNestedInput {
  data: TaskUpdateManyDataInput!
  where: TaskScalarWhereInput!
}

input TaskUpdateOneRequiredWithoutCommentsInput {
  connect: TaskWhereUniqueInput
  create: TaskCreateWithoutCommentsInput
  update: TaskUpdateWithoutCommentsDataInput
  upsert: TaskUpsertWithoutCommentsInput
}

input TaskUpdateOneRequiredWithoutResponseRequestsInput {
  connect: TaskWhereUniqueInput
  create: TaskCreateWithoutResponseRequestsInput
  update: TaskUpdateWithoutResponseRequestsDataInput
  upsert: TaskUpsertWithoutResponseRequestsInput
}

input TaskUpdateWithoutAssignedToDataInput {
  code: NullableStringFieldUpdateOperationsInput
  comments: CommentUpdateManyWithoutTaskInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: UserUpdateOneRequiredWithoutTasksCreatedInput
  description: NullableStringFieldUpdateOperationsInput
  estimated: IntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  labels: LabelUpdateManyWithoutTasksInput
  organization: OrganizationUpdateOneWithoutTasksInput
  responseRequests: ResponseRequestUpdateManyWithoutTaskInput
  state: NullableIntFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutTasksInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TaskUpdateWithoutCommentsDataInput {
  assignedTo: UserUpdateOneWithoutTasksAssignedInput
  code: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: UserUpdateOneRequiredWithoutTasksCreatedInput
  description: NullableStringFieldUpdateOperationsInput
  estimated: IntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  labels: LabelUpdateManyWithoutTasksInput
  organization: OrganizationUpdateOneWithoutTasksInput
  responseRequests: ResponseRequestUpdateManyWithoutTaskInput
  state: NullableIntFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutTasksInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TaskUpdateWithoutCreatedByDataInput {
  assignedTo: UserUpdateOneWithoutTasksAssignedInput
  code: NullableStringFieldUpdateOperationsInput
  comments: CommentUpdateManyWithoutTaskInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  estimated: IntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  labels: LabelUpdateManyWithoutTasksInput
  organization: OrganizationUpdateOneWithoutTasksInput
  responseRequests: ResponseRequestUpdateManyWithoutTaskInput
  state: NullableIntFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutTasksInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TaskUpdateWithoutLabelsDataInput {
  assignedTo: UserUpdateOneWithoutTasksAssignedInput
  code: NullableStringFieldUpdateOperationsInput
  comments: CommentUpdateManyWithoutTaskInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: UserUpdateOneRequiredWithoutTasksCreatedInput
  description: NullableStringFieldUpdateOperationsInput
  estimated: IntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  organization: OrganizationUpdateOneWithoutTasksInput
  responseRequests: ResponseRequestUpdateManyWithoutTaskInput
  state: NullableIntFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutTasksInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TaskUpdateWithoutOrganizationDataInput {
  assignedTo: UserUpdateOneWithoutTasksAssignedInput
  code: NullableStringFieldUpdateOperationsInput
  comments: CommentUpdateManyWithoutTaskInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: UserUpdateOneRequiredWithoutTasksCreatedInput
  description: NullableStringFieldUpdateOperationsInput
  estimated: IntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  labels: LabelUpdateManyWithoutTasksInput
  responseRequests: ResponseRequestUpdateManyWithoutTaskInput
  state: NullableIntFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutTasksInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TaskUpdateWithoutResponseRequestsDataInput {
  assignedTo: UserUpdateOneWithoutTasksAssignedInput
  code: NullableStringFieldUpdateOperationsInput
  comments: CommentUpdateManyWithoutTaskInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: UserUpdateOneRequiredWithoutTasksCreatedInput
  description: NullableStringFieldUpdateOperationsInput
  estimated: IntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  labels: LabelUpdateManyWithoutTasksInput
  organization: OrganizationUpdateOneWithoutTasksInput
  state: NullableIntFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutTasksInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TaskUpdateWithoutTeamDataInput {
  assignedTo: UserUpdateOneWithoutTasksAssignedInput
  code: NullableStringFieldUpdateOperationsInput
  comments: CommentUpdateManyWithoutTaskInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: UserUpdateOneRequiredWithoutTasksCreatedInput
  description: NullableStringFieldUpdateOperationsInput
  estimated: IntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  labels: LabelUpdateManyWithoutTasksInput
  organization: OrganizationUpdateOneWithoutTasksInput
  responseRequests: ResponseRequestUpdateManyWithoutTaskInput
  state: NullableIntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TaskUpdateWithWhereUniqueWithoutAssignedToInput {
  data: TaskUpdateWithoutAssignedToDataInput!
  where: TaskWhereUniqueInput!
}

input TaskUpdateWithWhereUniqueWithoutCreatedByInput {
  data: TaskUpdateWithoutCreatedByDataInput!
  where: TaskWhereUniqueInput!
}

input TaskUpdateWithWhereUniqueWithoutLabelsInput {
  data: TaskUpdateWithoutLabelsDataInput!
  where: TaskWhereUniqueInput!
}

input TaskUpdateWithWhereUniqueWithoutOrganizationInput {
  data: TaskUpdateWithoutOrganizationDataInput!
  where: TaskWhereUniqueInput!
}

input TaskUpdateWithWhereUniqueWithoutTeamInput {
  data: TaskUpdateWithoutTeamDataInput!
  where: TaskWhereUniqueInput!
}

input TaskUpsertWithoutCommentsInput {
  create: TaskCreateWithoutCommentsInput!
  update: TaskUpdateWithoutCommentsDataInput!
}

input TaskUpsertWithoutResponseRequestsInput {
  create: TaskCreateWithoutResponseRequestsInput!
  update: TaskUpdateWithoutResponseRequestsDataInput!
}

input TaskUpsertWithWhereUniqueWithoutAssignedToInput {
  create: TaskCreateWithoutAssignedToInput!
  update: TaskUpdateWithoutAssignedToDataInput!
  where: TaskWhereUniqueInput!
}

input TaskUpsertWithWhereUniqueWithoutCreatedByInput {
  create: TaskCreateWithoutCreatedByInput!
  update: TaskUpdateWithoutCreatedByDataInput!
  where: TaskWhereUniqueInput!
}

input TaskUpsertWithWhereUniqueWithoutLabelsInput {
  create: TaskCreateWithoutLabelsInput!
  update: TaskUpdateWithoutLabelsDataInput!
  where: TaskWhereUniqueInput!
}

input TaskUpsertWithWhereUniqueWithoutOrganizationInput {
  create: TaskCreateWithoutOrganizationInput!
  update: TaskUpdateWithoutOrganizationDataInput!
  where: TaskWhereUniqueInput!
}

input TaskUpsertWithWhereUniqueWithoutTeamInput {
  create: TaskCreateWithoutTeamInput!
  update: TaskUpdateWithoutTeamDataInput!
  where: TaskWhereUniqueInput!
}

input TaskWhereInput {
  AND: [TaskWhereInput!]
  assignedTo: UserWhereInput
  assignedToId: StringNullableFilter
  code: StringNullableFilter
  comments: CommentListRelationFilter
  createdAt: DateTimeFilter
  createdBy: UserWhereInput
  createdById: StringFilter
  description: StringNullableFilter
  estimated: IntFilter
  id: StringFilter
  labels: LabelListRelationFilter
  NOT: [TaskWhereInput!]
  OR: [TaskWhereInput!]
  organization: OrganizationWhereInput
  organizationId: StringNullableFilter
  responseRequests: ResponseRequestListRelationFilter
  state: IntNullableFilter
  team: TeamWhereInput
  teamId: StringNullableFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

input TaskWhereUniqueInput {
  code: String
  id: String
}

type Team {
  createdAt: DateTime!
  id: String!
  name: String!
  organization: Organization!
  tasks(after: TaskWhereUniqueInput, before: TaskWhereUniqueInput, first: Int, last: Int): [Task!]!
  updatedAt: DateTime!
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

input TeamCreateInput {
  createdAt: DateTime
  id: String
  name: String!
  organization: OrganizationCreateOneWithoutTeamsInput!
  tasks: TaskCreateManyWithoutTeamInput
  updatedAt: DateTime
  users: UserCreateManyWithoutTeamsInput
}

input TeamCreateManyWithoutOrganizationInput {
  connect: [TeamWhereUniqueInput!]
  create: [TeamCreateWithoutOrganizationInput!]
}

input TeamCreateManyWithoutUsersInput {
  connect: [TeamWhereUniqueInput!]
  create: [TeamCreateWithoutUsersInput!]
}

input TeamCreateOneWithoutTasksInput {
  connect: TeamWhereUniqueInput
  create: TeamCreateWithoutTasksInput
}

input TeamCreateWithoutOrganizationInput {
  createdAt: DateTime
  id: String
  name: String!
  tasks: TaskCreateManyWithoutTeamInput
  updatedAt: DateTime
  users: UserCreateManyWithoutTeamsInput
}

input TeamCreateWithoutTasksInput {
  createdAt: DateTime
  id: String
  name: String!
  organization: OrganizationCreateOneWithoutTeamsInput!
  updatedAt: DateTime
  users: UserCreateManyWithoutTeamsInput
}

input TeamCreateWithoutUsersInput {
  createdAt: DateTime
  id: String
  name: String!
  organization: OrganizationCreateOneWithoutTeamsInput!
  tasks: TaskCreateManyWithoutTeamInput
  updatedAt: DateTime
}

input TeamListRelationFilter {
  every: TeamWhereInput
  none: TeamWhereInput
  some: TeamWhereInput
}

input TeamOrderByInput {
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  organizationId: SortOrder
  updatedAt: SortOrder
}

input TeamScalarWhereInput {
  AND: [TeamScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  name: StringFilter
  NOT: [TeamScalarWhereInput!]
  OR: [TeamScalarWhereInput!]
  organizationId: StringFilter
  updatedAt: DateTimeFilter
}

input TeamUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  organization: OrganizationUpdateOneRequiredWithoutTeamsInput
  tasks: TaskUpdateManyWithoutTeamInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  users: UserUpdateManyWithoutTeamsInput
}

input TeamUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TeamUpdateManyWithoutOrganizationInput {
  connect: [TeamWhereUniqueInput!]
  create: [TeamCreateWithoutOrganizationInput!]
  delete: [TeamWhereUniqueInput!]
  deleteMany: [TeamScalarWhereInput!]
  disconnect: [TeamWhereUniqueInput!]
  set: [TeamWhereUniqueInput!]
  update: [TeamUpdateWithWhereUniqueWithoutOrganizationInput!]
  updateMany: [TeamUpdateManyWithWhereNestedInput!]
  upsert: [TeamUpsertWithWhereUniqueWithoutOrganizationInput!]
}

input TeamUpdateManyWithoutUsersInput {
  connect: [TeamWhereUniqueInput!]
  create: [TeamCreateWithoutUsersInput!]
  delete: [TeamWhereUniqueInput!]
  deleteMany: [TeamScalarWhereInput!]
  disconnect: [TeamWhereUniqueInput!]
  set: [TeamWhereUniqueInput!]
  update: [TeamUpdateWithWhereUniqueWithoutUsersInput!]
  updateMany: [TeamUpdateManyWithWhereNestedInput!]
  upsert: [TeamUpsertWithWhereUniqueWithoutUsersInput!]
}

input TeamUpdateManyWithWhereNestedInput {
  data: TeamUpdateManyDataInput!
  where: TeamScalarWhereInput!
}

input TeamUpdateOneWithoutTasksInput {
  connect: TeamWhereUniqueInput
  create: TeamCreateWithoutTasksInput
  delete: Boolean
  disconnect: Boolean
  update: TeamUpdateWithoutTasksDataInput
  upsert: TeamUpsertWithoutTasksInput
}

input TeamUpdateWithoutOrganizationDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  tasks: TaskUpdateManyWithoutTeamInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  users: UserUpdateManyWithoutTeamsInput
}

input TeamUpdateWithoutTasksDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  organization: OrganizationUpdateOneRequiredWithoutTeamsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  users: UserUpdateManyWithoutTeamsInput
}

input TeamUpdateWithoutUsersDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  organization: OrganizationUpdateOneRequiredWithoutTeamsInput
  tasks: TaskUpdateManyWithoutTeamInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TeamUpdateWithWhereUniqueWithoutOrganizationInput {
  data: TeamUpdateWithoutOrganizationDataInput!
  where: TeamWhereUniqueInput!
}

input TeamUpdateWithWhereUniqueWithoutUsersInput {
  data: TeamUpdateWithoutUsersDataInput!
  where: TeamWhereUniqueInput!
}

input TeamUpsertWithoutTasksInput {
  create: TeamCreateWithoutTasksInput!
  update: TeamUpdateWithoutTasksDataInput!
}

input TeamUpsertWithWhereUniqueWithoutOrganizationInput {
  create: TeamCreateWithoutOrganizationInput!
  update: TeamUpdateWithoutOrganizationDataInput!
  where: TeamWhereUniqueInput!
}

input TeamUpsertWithWhereUniqueWithoutUsersInput {
  create: TeamCreateWithoutUsersInput!
  update: TeamUpdateWithoutUsersDataInput!
  where: TeamWhereUniqueInput!
}

input TeamWhereInput {
  AND: [TeamWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  name: StringFilter
  NOT: [TeamWhereInput!]
  OR: [TeamWhereInput!]
  organization: OrganizationWhereInput
  organizationId: StringFilter
  tasks: TaskListRelationFilter
  updatedAt: DateTimeFilter
  users: UserListRelationFilter
}

input TeamWhereUniqueInput {
  id: String
}

type User {
  avatar: String
  biography: String
  createdAt: DateTime!
  email: String!
  emailVerificationCode: String
  emailVerificationCodeIssuedAt: DateTime
  emailVerifiedAt: DateTime
  firstName: String!
  hash: String!
  id: String!
  lastName: String
  organizations(after: OrganizationWhereUniqueInput, before: OrganizationWhereUniqueInput, first: Int, last: Int): [Organization!]!
  ownOrganizations(after: OrganizationWhereUniqueInput, before: OrganizationWhereUniqueInput, first: Int, last: Int): [Organization!]!
  receivedInvites(after: InviteWhereUniqueInput, before: InviteWhereUniqueInput, first: Int, last: Int): [Invite!]!
  resetPasswordCode: String
  resetPasswordCodeIssuedAt: DateTime
  sentInvites(after: InviteWhereUniqueInput, before: InviteWhereUniqueInput, first: Int, last: Int): [Invite!]!
  tasksAssigned(after: TaskWhereUniqueInput, before: TaskWhereUniqueInput, first: Int, last: Int): [Task!]!
  tasksCreated(after: TaskWhereUniqueInput, before: TaskWhereUniqueInput, first: Int, last: Int): [Task!]!
  teams(after: TeamWhereUniqueInput, before: TeamWhereUniqueInput, first: Int, last: Int): [Team!]!
  updatedAt: DateTime!
  username: String!
}

input UserCreateManyWithoutOrganizationsInput {
  connect: [UserWhereUniqueInput!]
  create: [UserCreateWithoutOrganizationsInput!]
}

input UserCreateManyWithoutTeamsInput {
  connect: [UserWhereUniqueInput!]
  create: [UserCreateWithoutTeamsInput!]
}

input UserCreateOneWithoutAssignedResponseRequestInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutAssignedResponseRequestInput
}

input UserCreateOneWithoutCommentInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutCommentInput
}

input UserCreateOneWithoutCreatedResponseRequestInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutCreatedResponseRequestInput
}

input UserCreateOneWithoutOwnOrganizationsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutOwnOrganizationsInput
}

input UserCreateOneWithoutReceivedInvitesInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutReceivedInvitesInput
}

input UserCreateOneWithoutSentInvitesInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutSentInvitesInput
}

input UserCreateOneWithoutTasksAssignedInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutTasksAssignedInput
}

input UserCreateOneWithoutTasksCreatedInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutTasksCreatedInput
}

input UserCreateWithoutAssignedResponseRequestInput {
  avatar: String
  biography: String
  Comment: CommentCreateManyWithoutUserInput
  createdAt: DateTime
  createdResponseRequest: ResponseRequestCreateManyWithoutCreatedByInput
  email: String!
  emailVerificationCode: String
  emailVerificationCodeIssuedAt: DateTime
  emailVerifiedAt: DateTime
  firstName: String!
  hash: String!
  id: String
  lastName: String
  organizations: OrganizationCreateManyWithoutUsersInput
  ownOrganizations: OrganizationCreateManyWithoutOwnerInput
  receivedInvites: InviteCreateManyWithoutToInput
  resetPasswordCode: String
  resetPasswordCodeIssuedAt: DateTime
  sentInvites: InviteCreateManyWithoutFromInput
  tasksAssigned: TaskCreateManyWithoutAssignedToInput
  tasksCreated: TaskCreateManyWithoutCreatedByInput
  teams: TeamCreateManyWithoutUsersInput
  updatedAt: DateTime
  username: String!
}

input UserCreateWithoutCommentInput {
  assignedResponseRequest: ResponseRequestCreateManyWithoutAssignedToInput
  avatar: String
  biography: String
  createdAt: DateTime
  createdResponseRequest: ResponseRequestCreateManyWithoutCreatedByInput
  email: String!
  emailVerificationCode: String
  emailVerificationCodeIssuedAt: DateTime
  emailVerifiedAt: DateTime
  firstName: String!
  hash: String!
  id: String
  lastName: String
  organizations: OrganizationCreateManyWithoutUsersInput
  ownOrganizations: OrganizationCreateManyWithoutOwnerInput
  receivedInvites: InviteCreateManyWithoutToInput
  resetPasswordCode: String
  resetPasswordCodeIssuedAt: DateTime
  sentInvites: InviteCreateManyWithoutFromInput
  tasksAssigned: TaskCreateManyWithoutAssignedToInput
  tasksCreated: TaskCreateManyWithoutCreatedByInput
  teams: TeamCreateManyWithoutUsersInput
  updatedAt: DateTime
  username: String!
}

input UserCreateWithoutCreatedResponseRequestInput {
  assignedResponseRequest: ResponseRequestCreateManyWithoutAssignedToInput
  avatar: String
  biography: String
  Comment: CommentCreateManyWithoutUserInput
  createdAt: DateTime
  email: String!
  emailVerificationCode: String
  emailVerificationCodeIssuedAt: DateTime
  emailVerifiedAt: DateTime
  firstName: String!
  hash: String!
  id: String
  lastName: String
  organizations: OrganizationCreateManyWithoutUsersInput
  ownOrganizations: OrganizationCreateManyWithoutOwnerInput
  receivedInvites: InviteCreateManyWithoutToInput
  resetPasswordCode: String
  resetPasswordCodeIssuedAt: DateTime
  sentInvites: InviteCreateManyWithoutFromInput
  tasksAssigned: TaskCreateManyWithoutAssignedToInput
  tasksCreated: TaskCreateManyWithoutCreatedByInput
  teams: TeamCreateManyWithoutUsersInput
  updatedAt: DateTime
  username: String!
}

input UserCreateWithoutOrganizationsInput {
  assignedResponseRequest: ResponseRequestCreateManyWithoutAssignedToInput
  avatar: String
  biography: String
  Comment: CommentCreateManyWithoutUserInput
  createdAt: DateTime
  createdResponseRequest: ResponseRequestCreateManyWithoutCreatedByInput
  email: String!
  emailVerificationCode: String
  emailVerificationCodeIssuedAt: DateTime
  emailVerifiedAt: DateTime
  firstName: String!
  hash: String!
  id: String
  lastName: String
  ownOrganizations: OrganizationCreateManyWithoutOwnerInput
  receivedInvites: InviteCreateManyWithoutToInput
  resetPasswordCode: String
  resetPasswordCodeIssuedAt: DateTime
  sentInvites: InviteCreateManyWithoutFromInput
  tasksAssigned: TaskCreateManyWithoutAssignedToInput
  tasksCreated: TaskCreateManyWithoutCreatedByInput
  teams: TeamCreateManyWithoutUsersInput
  updatedAt: DateTime
  username: String!
}

input UserCreateWithoutOwnOrganizationsInput {
  assignedResponseRequest: ResponseRequestCreateManyWithoutAssignedToInput
  avatar: String
  biography: String
  Comment: CommentCreateManyWithoutUserInput
  createdAt: DateTime
  createdResponseRequest: ResponseRequestCreateManyWithoutCreatedByInput
  email: String!
  emailVerificationCode: String
  emailVerificationCodeIssuedAt: DateTime
  emailVerifiedAt: DateTime
  firstName: String!
  hash: String!
  id: String
  lastName: String
  organizations: OrganizationCreateManyWithoutUsersInput
  receivedInvites: InviteCreateManyWithoutToInput
  resetPasswordCode: String
  resetPasswordCodeIssuedAt: DateTime
  sentInvites: InviteCreateManyWithoutFromInput
  tasksAssigned: TaskCreateManyWithoutAssignedToInput
  tasksCreated: TaskCreateManyWithoutCreatedByInput
  teams: TeamCreateManyWithoutUsersInput
  updatedAt: DateTime
  username: String!
}

input UserCreateWithoutReceivedInvitesInput {
  assignedResponseRequest: ResponseRequestCreateManyWithoutAssignedToInput
  avatar: String
  biography: String
  Comment: CommentCreateManyWithoutUserInput
  createdAt: DateTime
  createdResponseRequest: ResponseRequestCreateManyWithoutCreatedByInput
  email: String!
  emailVerificationCode: String
  emailVerificationCodeIssuedAt: DateTime
  emailVerifiedAt: DateTime
  firstName: String!
  hash: String!
  id: String
  lastName: String
  organizations: OrganizationCreateManyWithoutUsersInput
  ownOrganizations: OrganizationCreateManyWithoutOwnerInput
  resetPasswordCode: String
  resetPasswordCodeIssuedAt: DateTime
  sentInvites: InviteCreateManyWithoutFromInput
  tasksAssigned: TaskCreateManyWithoutAssignedToInput
  tasksCreated: TaskCreateManyWithoutCreatedByInput
  teams: TeamCreateManyWithoutUsersInput
  updatedAt: DateTime
  username: String!
}

input UserCreateWithoutSentInvitesInput {
  assignedResponseRequest: ResponseRequestCreateManyWithoutAssignedToInput
  avatar: String
  biography: String
  Comment: CommentCreateManyWithoutUserInput
  createdAt: DateTime
  createdResponseRequest: ResponseRequestCreateManyWithoutCreatedByInput
  email: String!
  emailVerificationCode: String
  emailVerificationCodeIssuedAt: DateTime
  emailVerifiedAt: DateTime
  firstName: String!
  hash: String!
  id: String
  lastName: String
  organizations: OrganizationCreateManyWithoutUsersInput
  ownOrganizations: OrganizationCreateManyWithoutOwnerInput
  receivedInvites: InviteCreateManyWithoutToInput
  resetPasswordCode: String
  resetPasswordCodeIssuedAt: DateTime
  tasksAssigned: TaskCreateManyWithoutAssignedToInput
  tasksCreated: TaskCreateManyWithoutCreatedByInput
  teams: TeamCreateManyWithoutUsersInput
  updatedAt: DateTime
  username: String!
}

input UserCreateWithoutTasksAssignedInput {
  assignedResponseRequest: ResponseRequestCreateManyWithoutAssignedToInput
  avatar: String
  biography: String
  Comment: CommentCreateManyWithoutUserInput
  createdAt: DateTime
  createdResponseRequest: ResponseRequestCreateManyWithoutCreatedByInput
  email: String!
  emailVerificationCode: String
  emailVerificationCodeIssuedAt: DateTime
  emailVerifiedAt: DateTime
  firstName: String!
  hash: String!
  id: String
  lastName: String
  organizations: OrganizationCreateManyWithoutUsersInput
  ownOrganizations: OrganizationCreateManyWithoutOwnerInput
  receivedInvites: InviteCreateManyWithoutToInput
  resetPasswordCode: String
  resetPasswordCodeIssuedAt: DateTime
  sentInvites: InviteCreateManyWithoutFromInput
  tasksCreated: TaskCreateManyWithoutCreatedByInput
  teams: TeamCreateManyWithoutUsersInput
  updatedAt: DateTime
  username: String!
}

input UserCreateWithoutTasksCreatedInput {
  assignedResponseRequest: ResponseRequestCreateManyWithoutAssignedToInput
  avatar: String
  biography: String
  Comment: CommentCreateManyWithoutUserInput
  createdAt: DateTime
  createdResponseRequest: ResponseRequestCreateManyWithoutCreatedByInput
  email: String!
  emailVerificationCode: String
  emailVerificationCodeIssuedAt: DateTime
  emailVerifiedAt: DateTime
  firstName: String!
  hash: String!
  id: String
  lastName: String
  organizations: OrganizationCreateManyWithoutUsersInput
  ownOrganizations: OrganizationCreateManyWithoutOwnerInput
  receivedInvites: InviteCreateManyWithoutToInput
  resetPasswordCode: String
  resetPasswordCodeIssuedAt: DateTime
  sentInvites: InviteCreateManyWithoutFromInput
  tasksAssigned: TaskCreateManyWithoutAssignedToInput
  teams: TeamCreateManyWithoutUsersInput
  updatedAt: DateTime
  username: String!
}

input UserCreateWithoutTeamsInput {
  assignedResponseRequest: ResponseRequestCreateManyWithoutAssignedToInput
  avatar: String
  biography: String
  Comment: CommentCreateManyWithoutUserInput
  createdAt: DateTime
  createdResponseRequest: ResponseRequestCreateManyWithoutCreatedByInput
  email: String!
  emailVerificationCode: String
  emailVerificationCodeIssuedAt: DateTime
  emailVerifiedAt: DateTime
  firstName: String!
  hash: String!
  id: String
  lastName: String
  organizations: OrganizationCreateManyWithoutUsersInput
  ownOrganizations: OrganizationCreateManyWithoutOwnerInput
  receivedInvites: InviteCreateManyWithoutToInput
  resetPasswordCode: String
  resetPasswordCodeIssuedAt: DateTime
  sentInvites: InviteCreateManyWithoutFromInput
  tasksAssigned: TaskCreateManyWithoutAssignedToInput
  tasksCreated: TaskCreateManyWithoutCreatedByInput
  updatedAt: DateTime
  username: String!
}

input UserListRelationFilter {
  every: UserWhereInput
  none: UserWhereInput
  some: UserWhereInput
}

input UserOrderByInput {
  avatar: SortOrder
  biography: SortOrder
  createdAt: SortOrder
  email: SortOrder
  emailVerificationCode: SortOrder
  emailVerificationCodeIssuedAt: SortOrder
  emailVerifiedAt: SortOrder
  firstName: SortOrder
  hash: SortOrder
  id: SortOrder
  lastName: SortOrder
  resetPasswordCode: SortOrder
  resetPasswordCodeIssuedAt: SortOrder
  updatedAt: SortOrder
  username: SortOrder
}

input UserScalarWhereInput {
  AND: [UserScalarWhereInput!]
  avatar: StringNullableFilter
  biography: StringNullableFilter
  createdAt: DateTimeFilter
  email: StringFilter
  emailVerificationCode: StringNullableFilter
  emailVerificationCodeIssuedAt: DateTimeNullableFilter
  emailVerifiedAt: DateTimeNullableFilter
  firstName: StringFilter
  hash: StringFilter
  id: StringFilter
  lastName: StringNullableFilter
  NOT: [UserScalarWhereInput!]
  OR: [UserScalarWhereInput!]
  resetPasswordCode: StringNullableFilter
  resetPasswordCodeIssuedAt: DateTimeNullableFilter
  updatedAt: DateTimeFilter
  username: StringFilter
}

input UserUpdateInput {
  assignedResponseRequest: ResponseRequestUpdateManyWithoutAssignedToInput
  avatar: NullableStringFieldUpdateOperationsInput
  biography: NullableStringFieldUpdateOperationsInput
  Comment: CommentUpdateManyWithoutUserInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdResponseRequest: ResponseRequestUpdateManyWithoutCreatedByInput
  email: StringFieldUpdateOperationsInput
  emailVerificationCode: NullableStringFieldUpdateOperationsInput
  emailVerificationCodeIssuedAt: NullableDateTimeFieldUpdateOperationsInput
  emailVerifiedAt: NullableDateTimeFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  hash: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  organizations: OrganizationUpdateManyWithoutUsersInput
  ownOrganizations: OrganizationUpdateManyWithoutOwnerInput
  receivedInvites: InviteUpdateManyWithoutToInput
  resetPasswordCode: NullableStringFieldUpdateOperationsInput
  resetPasswordCodeIssuedAt: NullableDateTimeFieldUpdateOperationsInput
  sentInvites: InviteUpdateManyWithoutFromInput
  tasksAssigned: TaskUpdateManyWithoutAssignedToInput
  tasksCreated: TaskUpdateManyWithoutCreatedByInput
  teams: TeamUpdateManyWithoutUsersInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateManyDataInput {
  avatar: NullableStringFieldUpdateOperationsInput
  biography: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  emailVerificationCode: NullableStringFieldUpdateOperationsInput
  emailVerificationCodeIssuedAt: NullableDateTimeFieldUpdateOperationsInput
  emailVerifiedAt: NullableDateTimeFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  hash: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  resetPasswordCode: NullableStringFieldUpdateOperationsInput
  resetPasswordCodeIssuedAt: NullableDateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateManyWithoutOrganizationsInput {
  connect: [UserWhereUniqueInput!]
  create: [UserCreateWithoutOrganizationsInput!]
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutOrganizationsInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutOrganizationsInput!]
}

input UserUpdateManyWithoutTeamsInput {
  connect: [UserWhereUniqueInput!]
  create: [UserCreateWithoutTeamsInput!]
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutTeamsInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutTeamsInput!]
}

input UserUpdateManyWithWhereNestedInput {
  data: UserUpdateManyDataInput!
  where: UserScalarWhereInput!
}

input UserUpdateOneRequiredWithoutAssignedResponseRequestInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutAssignedResponseRequestInput
  update: UserUpdateWithoutAssignedResponseRequestDataInput
  upsert: UserUpsertWithoutAssignedResponseRequestInput
}

input UserUpdateOneRequiredWithoutCommentInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutCommentInput
  update: UserUpdateWithoutCommentDataInput
  upsert: UserUpsertWithoutCommentInput
}

input UserUpdateOneRequiredWithoutCreatedResponseRequestInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutCreatedResponseRequestInput
  update: UserUpdateWithoutCreatedResponseRequestDataInput
  upsert: UserUpsertWithoutCreatedResponseRequestInput
}

input UserUpdateOneRequiredWithoutOwnOrganizationsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutOwnOrganizationsInput
  update: UserUpdateWithoutOwnOrganizationsDataInput
  upsert: UserUpsertWithoutOwnOrganizationsInput
}

input UserUpdateOneRequiredWithoutSentInvitesInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutSentInvitesInput
  update: UserUpdateWithoutSentInvitesDataInput
  upsert: UserUpsertWithoutSentInvitesInput
}

input UserUpdateOneRequiredWithoutTasksCreatedInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutTasksCreatedInput
  update: UserUpdateWithoutTasksCreatedDataInput
  upsert: UserUpsertWithoutTasksCreatedInput
}

input UserUpdateOneWithoutReceivedInvitesInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutReceivedInvitesInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutReceivedInvitesDataInput
  upsert: UserUpsertWithoutReceivedInvitesInput
}

input UserUpdateOneWithoutTasksAssignedInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutTasksAssignedInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutTasksAssignedDataInput
  upsert: UserUpsertWithoutTasksAssignedInput
}

input UserUpdateWithoutAssignedResponseRequestDataInput {
  avatar: NullableStringFieldUpdateOperationsInput
  biography: NullableStringFieldUpdateOperationsInput
  Comment: CommentUpdateManyWithoutUserInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdResponseRequest: ResponseRequestUpdateManyWithoutCreatedByInput
  email: StringFieldUpdateOperationsInput
  emailVerificationCode: NullableStringFieldUpdateOperationsInput
  emailVerificationCodeIssuedAt: NullableDateTimeFieldUpdateOperationsInput
  emailVerifiedAt: NullableDateTimeFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  hash: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  organizations: OrganizationUpdateManyWithoutUsersInput
  ownOrganizations: OrganizationUpdateManyWithoutOwnerInput
  receivedInvites: InviteUpdateManyWithoutToInput
  resetPasswordCode: NullableStringFieldUpdateOperationsInput
  resetPasswordCodeIssuedAt: NullableDateTimeFieldUpdateOperationsInput
  sentInvites: InviteUpdateManyWithoutFromInput
  tasksAssigned: TaskUpdateManyWithoutAssignedToInput
  tasksCreated: TaskUpdateManyWithoutCreatedByInput
  teams: TeamUpdateManyWithoutUsersInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateWithoutCommentDataInput {
  assignedResponseRequest: ResponseRequestUpdateManyWithoutAssignedToInput
  avatar: NullableStringFieldUpdateOperationsInput
  biography: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdResponseRequest: ResponseRequestUpdateManyWithoutCreatedByInput
  email: StringFieldUpdateOperationsInput
  emailVerificationCode: NullableStringFieldUpdateOperationsInput
  emailVerificationCodeIssuedAt: NullableDateTimeFieldUpdateOperationsInput
  emailVerifiedAt: NullableDateTimeFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  hash: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  organizations: OrganizationUpdateManyWithoutUsersInput
  ownOrganizations: OrganizationUpdateManyWithoutOwnerInput
  receivedInvites: InviteUpdateManyWithoutToInput
  resetPasswordCode: NullableStringFieldUpdateOperationsInput
  resetPasswordCodeIssuedAt: NullableDateTimeFieldUpdateOperationsInput
  sentInvites: InviteUpdateManyWithoutFromInput
  tasksAssigned: TaskUpdateManyWithoutAssignedToInput
  tasksCreated: TaskUpdateManyWithoutCreatedByInput
  teams: TeamUpdateManyWithoutUsersInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateWithoutCreatedResponseRequestDataInput {
  assignedResponseRequest: ResponseRequestUpdateManyWithoutAssignedToInput
  avatar: NullableStringFieldUpdateOperationsInput
  biography: NullableStringFieldUpdateOperationsInput
  Comment: CommentUpdateManyWithoutUserInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  emailVerificationCode: NullableStringFieldUpdateOperationsInput
  emailVerificationCodeIssuedAt: NullableDateTimeFieldUpdateOperationsInput
  emailVerifiedAt: NullableDateTimeFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  hash: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  organizations: OrganizationUpdateManyWithoutUsersInput
  ownOrganizations: OrganizationUpdateManyWithoutOwnerInput
  receivedInvites: InviteUpdateManyWithoutToInput
  resetPasswordCode: NullableStringFieldUpdateOperationsInput
  resetPasswordCodeIssuedAt: NullableDateTimeFieldUpdateOperationsInput
  sentInvites: InviteUpdateManyWithoutFromInput
  tasksAssigned: TaskUpdateManyWithoutAssignedToInput
  tasksCreated: TaskUpdateManyWithoutCreatedByInput
  teams: TeamUpdateManyWithoutUsersInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateWithoutOrganizationsDataInput {
  assignedResponseRequest: ResponseRequestUpdateManyWithoutAssignedToInput
  avatar: NullableStringFieldUpdateOperationsInput
  biography: NullableStringFieldUpdateOperationsInput
  Comment: CommentUpdateManyWithoutUserInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdResponseRequest: ResponseRequestUpdateManyWithoutCreatedByInput
  email: StringFieldUpdateOperationsInput
  emailVerificationCode: NullableStringFieldUpdateOperationsInput
  emailVerificationCodeIssuedAt: NullableDateTimeFieldUpdateOperationsInput
  emailVerifiedAt: NullableDateTimeFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  hash: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  ownOrganizations: OrganizationUpdateManyWithoutOwnerInput
  receivedInvites: InviteUpdateManyWithoutToInput
  resetPasswordCode: NullableStringFieldUpdateOperationsInput
  resetPasswordCodeIssuedAt: NullableDateTimeFieldUpdateOperationsInput
  sentInvites: InviteUpdateManyWithoutFromInput
  tasksAssigned: TaskUpdateManyWithoutAssignedToInput
  tasksCreated: TaskUpdateManyWithoutCreatedByInput
  teams: TeamUpdateManyWithoutUsersInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateWithoutOwnOrganizationsDataInput {
  assignedResponseRequest: ResponseRequestUpdateManyWithoutAssignedToInput
  avatar: NullableStringFieldUpdateOperationsInput
  biography: NullableStringFieldUpdateOperationsInput
  Comment: CommentUpdateManyWithoutUserInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdResponseRequest: ResponseRequestUpdateManyWithoutCreatedByInput
  email: StringFieldUpdateOperationsInput
  emailVerificationCode: NullableStringFieldUpdateOperationsInput
  emailVerificationCodeIssuedAt: NullableDateTimeFieldUpdateOperationsInput
  emailVerifiedAt: NullableDateTimeFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  hash: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  organizations: OrganizationUpdateManyWithoutUsersInput
  receivedInvites: InviteUpdateManyWithoutToInput
  resetPasswordCode: NullableStringFieldUpdateOperationsInput
  resetPasswordCodeIssuedAt: NullableDateTimeFieldUpdateOperationsInput
  sentInvites: InviteUpdateManyWithoutFromInput
  tasksAssigned: TaskUpdateManyWithoutAssignedToInput
  tasksCreated: TaskUpdateManyWithoutCreatedByInput
  teams: TeamUpdateManyWithoutUsersInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateWithoutReceivedInvitesDataInput {
  assignedResponseRequest: ResponseRequestUpdateManyWithoutAssignedToInput
  avatar: NullableStringFieldUpdateOperationsInput
  biography: NullableStringFieldUpdateOperationsInput
  Comment: CommentUpdateManyWithoutUserInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdResponseRequest: ResponseRequestUpdateManyWithoutCreatedByInput
  email: StringFieldUpdateOperationsInput
  emailVerificationCode: NullableStringFieldUpdateOperationsInput
  emailVerificationCodeIssuedAt: NullableDateTimeFieldUpdateOperationsInput
  emailVerifiedAt: NullableDateTimeFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  hash: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  organizations: OrganizationUpdateManyWithoutUsersInput
  ownOrganizations: OrganizationUpdateManyWithoutOwnerInput
  resetPasswordCode: NullableStringFieldUpdateOperationsInput
  resetPasswordCodeIssuedAt: NullableDateTimeFieldUpdateOperationsInput
  sentInvites: InviteUpdateManyWithoutFromInput
  tasksAssigned: TaskUpdateManyWithoutAssignedToInput
  tasksCreated: TaskUpdateManyWithoutCreatedByInput
  teams: TeamUpdateManyWithoutUsersInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateWithoutSentInvitesDataInput {
  assignedResponseRequest: ResponseRequestUpdateManyWithoutAssignedToInput
  avatar: NullableStringFieldUpdateOperationsInput
  biography: NullableStringFieldUpdateOperationsInput
  Comment: CommentUpdateManyWithoutUserInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdResponseRequest: ResponseRequestUpdateManyWithoutCreatedByInput
  email: StringFieldUpdateOperationsInput
  emailVerificationCode: NullableStringFieldUpdateOperationsInput
  emailVerificationCodeIssuedAt: NullableDateTimeFieldUpdateOperationsInput
  emailVerifiedAt: NullableDateTimeFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  hash: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  organizations: OrganizationUpdateManyWithoutUsersInput
  ownOrganizations: OrganizationUpdateManyWithoutOwnerInput
  receivedInvites: InviteUpdateManyWithoutToInput
  resetPasswordCode: NullableStringFieldUpdateOperationsInput
  resetPasswordCodeIssuedAt: NullableDateTimeFieldUpdateOperationsInput
  tasksAssigned: TaskUpdateManyWithoutAssignedToInput
  tasksCreated: TaskUpdateManyWithoutCreatedByInput
  teams: TeamUpdateManyWithoutUsersInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateWithoutTasksAssignedDataInput {
  assignedResponseRequest: ResponseRequestUpdateManyWithoutAssignedToInput
  avatar: NullableStringFieldUpdateOperationsInput
  biography: NullableStringFieldUpdateOperationsInput
  Comment: CommentUpdateManyWithoutUserInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdResponseRequest: ResponseRequestUpdateManyWithoutCreatedByInput
  email: StringFieldUpdateOperationsInput
  emailVerificationCode: NullableStringFieldUpdateOperationsInput
  emailVerificationCodeIssuedAt: NullableDateTimeFieldUpdateOperationsInput
  emailVerifiedAt: NullableDateTimeFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  hash: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  organizations: OrganizationUpdateManyWithoutUsersInput
  ownOrganizations: OrganizationUpdateManyWithoutOwnerInput
  receivedInvites: InviteUpdateManyWithoutToInput
  resetPasswordCode: NullableStringFieldUpdateOperationsInput
  resetPasswordCodeIssuedAt: NullableDateTimeFieldUpdateOperationsInput
  sentInvites: InviteUpdateManyWithoutFromInput
  tasksCreated: TaskUpdateManyWithoutCreatedByInput
  teams: TeamUpdateManyWithoutUsersInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateWithoutTasksCreatedDataInput {
  assignedResponseRequest: ResponseRequestUpdateManyWithoutAssignedToInput
  avatar: NullableStringFieldUpdateOperationsInput
  biography: NullableStringFieldUpdateOperationsInput
  Comment: CommentUpdateManyWithoutUserInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdResponseRequest: ResponseRequestUpdateManyWithoutCreatedByInput
  email: StringFieldUpdateOperationsInput
  emailVerificationCode: NullableStringFieldUpdateOperationsInput
  emailVerificationCodeIssuedAt: NullableDateTimeFieldUpdateOperationsInput
  emailVerifiedAt: NullableDateTimeFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  hash: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  organizations: OrganizationUpdateManyWithoutUsersInput
  ownOrganizations: OrganizationUpdateManyWithoutOwnerInput
  receivedInvites: InviteUpdateManyWithoutToInput
  resetPasswordCode: NullableStringFieldUpdateOperationsInput
  resetPasswordCodeIssuedAt: NullableDateTimeFieldUpdateOperationsInput
  sentInvites: InviteUpdateManyWithoutFromInput
  tasksAssigned: TaskUpdateManyWithoutAssignedToInput
  teams: TeamUpdateManyWithoutUsersInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateWithoutTeamsDataInput {
  assignedResponseRequest: ResponseRequestUpdateManyWithoutAssignedToInput
  avatar: NullableStringFieldUpdateOperationsInput
  biography: NullableStringFieldUpdateOperationsInput
  Comment: CommentUpdateManyWithoutUserInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdResponseRequest: ResponseRequestUpdateManyWithoutCreatedByInput
  email: StringFieldUpdateOperationsInput
  emailVerificationCode: NullableStringFieldUpdateOperationsInput
  emailVerificationCodeIssuedAt: NullableDateTimeFieldUpdateOperationsInput
  emailVerifiedAt: NullableDateTimeFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  hash: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  organizations: OrganizationUpdateManyWithoutUsersInput
  ownOrganizations: OrganizationUpdateManyWithoutOwnerInput
  receivedInvites: InviteUpdateManyWithoutToInput
  resetPasswordCode: NullableStringFieldUpdateOperationsInput
  resetPasswordCodeIssuedAt: NullableDateTimeFieldUpdateOperationsInput
  sentInvites: InviteUpdateManyWithoutFromInput
  tasksAssigned: TaskUpdateManyWithoutAssignedToInput
  tasksCreated: TaskUpdateManyWithoutCreatedByInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateWithWhereUniqueWithoutOrganizationsInput {
  data: UserUpdateWithoutOrganizationsDataInput!
  where: UserWhereUniqueInput!
}

input UserUpdateWithWhereUniqueWithoutTeamsInput {
  data: UserUpdateWithoutTeamsDataInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithoutAssignedResponseRequestInput {
  create: UserCreateWithoutAssignedResponseRequestInput!
  update: UserUpdateWithoutAssignedResponseRequestDataInput!
}

input UserUpsertWithoutCommentInput {
  create: UserCreateWithoutCommentInput!
  update: UserUpdateWithoutCommentDataInput!
}

input UserUpsertWithoutCreatedResponseRequestInput {
  create: UserCreateWithoutCreatedResponseRequestInput!
  update: UserUpdateWithoutCreatedResponseRequestDataInput!
}

input UserUpsertWithoutOwnOrganizationsInput {
  create: UserCreateWithoutOwnOrganizationsInput!
  update: UserUpdateWithoutOwnOrganizationsDataInput!
}

input UserUpsertWithoutReceivedInvitesInput {
  create: UserCreateWithoutReceivedInvitesInput!
  update: UserUpdateWithoutReceivedInvitesDataInput!
}

input UserUpsertWithoutSentInvitesInput {
  create: UserCreateWithoutSentInvitesInput!
  update: UserUpdateWithoutSentInvitesDataInput!
}

input UserUpsertWithoutTasksAssignedInput {
  create: UserCreateWithoutTasksAssignedInput!
  update: UserUpdateWithoutTasksAssignedDataInput!
}

input UserUpsertWithoutTasksCreatedInput {
  create: UserCreateWithoutTasksCreatedInput!
  update: UserUpdateWithoutTasksCreatedDataInput!
}

input UserUpsertWithWhereUniqueWithoutOrganizationsInput {
  create: UserCreateWithoutOrganizationsInput!
  update: UserUpdateWithoutOrganizationsDataInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithWhereUniqueWithoutTeamsInput {
  create: UserCreateWithoutTeamsInput!
  update: UserUpdateWithoutTeamsDataInput!
  where: UserWhereUniqueInput!
}

input UserWhereInput {
  AND: [UserWhereInput!]
  assignedResponseRequest: ResponseRequestListRelationFilter
  avatar: StringNullableFilter
  biography: StringNullableFilter
  Comment: CommentListRelationFilter
  createdAt: DateTimeFilter
  createdResponseRequest: ResponseRequestListRelationFilter
  email: StringFilter
  emailVerificationCode: StringNullableFilter
  emailVerificationCodeIssuedAt: DateTimeNullableFilter
  emailVerifiedAt: DateTimeNullableFilter
  firstName: StringFilter
  hash: StringFilter
  id: StringFilter
  lastName: StringNullableFilter
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  organizations: OrganizationListRelationFilter
  ownOrganizations: OrganizationListRelationFilter
  receivedInvites: InviteListRelationFilter
  resetPasswordCode: StringNullableFilter
  resetPasswordCodeIssuedAt: DateTimeNullableFilter
  sentInvites: InviteListRelationFilter
  tasksAssigned: TaskListRelationFilter
  tasksCreated: TaskListRelationFilter
  teams: TeamListRelationFilter
  updatedAt: DateTimeFilter
  username: StringFilter
}

input UserWhereUniqueInput {
  email: String
  id: String
  username: String
}
