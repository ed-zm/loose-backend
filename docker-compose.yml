version: "3"
services:
  loose-db:
      container_name: loose-db
      volumes:
        - postgres:/data/postgres
      image: postgres
      restart: always
      ports:
        - ${DB_PORT}:${DB_PORT}
      environment:
        POSTGRES_PASSWORD: ${DB_PASSWORD}
        POSTGRES_USER: ${DB_USER}
        POSTGRES_DB: ${PRISMA_SERVICE}
        PGDATA: /data/postgres
  pgadmin:
    depends_on:
      - loose-db
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5051}:80"
    restart: unless-stopped

  prisma:
    image: prismagraphql/prisma:1.34
    restart: always
    links:
      - loose-db
    depends_on:
      - loose-db
    ports:
      - ${PRISMA_PORT}:${PRISMA_PORT}
    environment:
      PRISMA_CONFIG: |
        managementApiSecret: ${PRISMA_MANAGEMENT_API_SECRET}
        port: ${PRISMA_PORT}
        databases:
          default:
            database: ${PRISMA_SERVICE}
            connector: postgres
            host: loose-db
            port: ${DB_PORT}
            user: ${DB_USER}
            password: ${DB_PASSWORD}
            migrations: true
  backend:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8001:8001
    environment:
      PRISMA_HOST: ${PRISMA_HOST}
      PRISMA_PORT: ${PRISMA_PORT}
      PRISMA_SERVICE: ${PRISMA_SERVICE}
      STAGE: ${STAGE}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}

    volumes:
      - .:/app
      - /app/node_modules

volumes:
  postgres:
  app:
  pgadmin:
